#!/usr/bin/perl
# ----------------------------------------------------------------
# A Mojo Web App as a NNexus entry point
# Deyan Ginev, <d.ginev@jacobs-university.de>
# GPLv3 code
# ----------------------------------------------------------------
use File::Basename;
my $FILE_BASE;
BEGIN {
    $FILE_BASE = dirname(__FILE__);
}
if (-e $FILE_BASE."/../lib") {
  use lib $FILE_BASE."/../lib";
}

use Mojolicious::Lite;
use Mojo::JSON;
use Mojo::IOLoop;
use Mojo::ByteStream qw(b);

use Encode;
use strict;

use NNexus::Job;
use NNexus::Config;
use XML::Simple;
use Data::Dumper;

our $version = '0.1';
# Configuration is server-level

my $opts;
if ($ARGV[0]) {
  print STDERR "\nBase Configuration to be read from: $ARGV[0]\n";
  if (-e $ARGV[0]) {
    $opts = XMLin($ARGV[0])
  } else {
    print STDERR "Error: No such file $ARGV[0]! Expect trouble...\n";
  }
}
our $config = NNexus::Config->new($opts);

$ENV{MOJO_HOME} = '.' unless defined $ENV{MOJO_HOME};
$ENV{MOJO_MAX_MESSAGE_SIZE} = 10485760; # 10 MB file upload limit

# Make signed cookies secure
app->secret('NNexus auto-linking for the win!');

helper prepare_job => sub {
  my ($self,%override) = @_;
  my $get_params = $self->req->url->query->params || [];
  my $post_params = $self->req->body_params->params || [];
  if (scalar(@$post_params) == 1) {
    $post_params = ['body' , $post_params->[0]];
  } elsif (scalar(@$post_params) == 2 && ($post_params->[0] ne 'body')) {
    $post_params = ['body' , $post_params->[0].$post_params->[1]];
  }
  my $parameters = { @$get_params, @$post_params };
  # Currently , we only support :
  $parameters->{'format'} //= 'html';
  $parameters->{'function'} //= 'linkentry';
  $parameters->{'domain'} //= 'planetmath';
  foreach my $key(keys %override) {
    $parameters->{$key} = $override{$key};
  }
  $parameters->{'config'} = $config;
  return NNexus::Job->new(%$parameters);
};

post '/' => sub {
  my $job = $_[0]->prepare_job;
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};

# Shortcut paths:
post '/autolink' => sub {
  my $job = $_[0]->prepare_job(function=>'linkentry');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/linkentry' => sub {
  my $job = $_[0]->prepare_job(function=>'linkentry');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/addobject' => sub {
  my $job = $_[0]->prepare_job(function=>'addobject');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/updateobject' => sub {
  my $job = $_[0]->prepare_job(function=>'updateobject');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/deleteobject' => sub {
  my $job = $_[0]->prepare_job(function=>'deleteobject');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/updatelinkpolicy' => sub {
  my $job = $_[0]->prepare_job(function=>'updatelinkpolicy');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};
post '/checkvalid' => sub {
  my $job = $_[0]->prepare_job(function=>'checkvalid');
  $job->execute;
  $_[0]->render(json=>{result=>$job->result});
};

app->start;

__END__
